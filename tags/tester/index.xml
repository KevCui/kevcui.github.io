<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Krazy Kevin</title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>https://krazycavin.github.io/tags/tester/</link>
    <language>en-us</language>
    
    
    <updated>Tue, 03 Oct 2017 17:50:00 CEST</updated>
    
    <item>
      <title>Asking Better Questions for 4 Different Purposes</title>
      <link>https://krazycavin.github.io/2017/10/03/ask-better-questions-for-four-different-purposes/</link>
      <pubDate>Tue, 03 Oct 2017 17:50:00 CEST</pubDate>
      
      <guid>https://krazycavin.github.io/2017/10/03/ask-better-questions-for-four-different-purposes/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;You should not ask questions without knowledge.&amp;rdquo; &amp;ndash; W. Edwards Deming&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A good tester asks good questions. Asking questions is a must-have skill for a software tester. Therefore, as a software tester, I see asking questions as a privilege, which is allowed under any circumstances. However, asking questions is not always easy. We all know sometimes a bad question may cause some communication troubles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An unnecessary question makes developers annoyed.&lt;/li&gt;
&lt;li&gt;A wrong question makes POs confused&lt;/li&gt;
&lt;li&gt;An absurd question makes stakeholders scared.&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Understanding the purposes of questions may help to ask them effectively. I&amp;rsquo;d like to share some thoughts on how to ask better questions for 4 different purposes.&lt;/p&gt;

&lt;h3 id=&#34;i-ask-myself-questions-before-asking-people-questions&#34;&gt;I ask myself questions before asking people questions&lt;/h3&gt;

&lt;p&gt;Before asking questions, I consider asking myself questions first to figure out 2 important things:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The background of the current situation - questions to figure out &amp;ldquo;what to question&amp;rdquo;:

&lt;ul&gt;
&lt;li&gt;Do I understand the current situation?&lt;/li&gt;
&lt;li&gt;Is there anything unclear for me or for others?&lt;/li&gt;
&lt;li&gt;Is my question important to make the current situation clear for me or for others?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;The target - questions to figure out &amp;ldquo;question to who&amp;rdquo;:

&lt;ul&gt;
&lt;li&gt;Do I find the correct person/group to address my questions?&lt;/li&gt;
&lt;li&gt;Do I reduce the number of unnecessary persons?&lt;/li&gt;
&lt;li&gt;Is the target person/group available at the moment?&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If the answers are all &amp;ldquo;yeah&amp;rdquo; for the questions above, it&amp;rsquo;s good to go ahead!&lt;/p&gt;

&lt;h3 id=&#34;i-ask-questions-to-collect-information&#34;&gt;I ask questions to collect information&lt;/h3&gt;

&lt;p&gt;It applies to the situation that I&amp;rsquo;m the one who wants to know the answer. Another person may give me the information. Usually, &lt;a href=&#34;https://en.wikipedia.org/wiki/Open-ended_question&#34;&gt;open questions&lt;/a&gt; are preferable in this case.&lt;/p&gt;

&lt;p&gt;The background:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Current situation: Bob and Stuart were paring on some tasks. But these tasks are marked as &amp;ldquo;blocked&amp;rdquo; on our scum board.&lt;/li&gt;
&lt;li&gt;Unclear thing for me: These tasks are blocked for which reason?&lt;/li&gt;
&lt;li&gt;Purpose of the question: I need to know what I can help&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The target:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Correct person: Bob and Stuart&lt;/li&gt;
&lt;li&gt;Unnecessary person: Bob or Stuart, no need 2 of them&lt;/li&gt;
&lt;li&gt;Available person: Bob. He is going to have a coffee, without his headphone.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it comes to my question to Bob: &lt;em&gt;&amp;ldquo;I saw that some tasks of this story are currently blocked. I want to know if I can support you on these tasks. Maybe you know what is the blocker?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;i-ask-questions-to-confirm-a-response&#34;&gt;I ask questions to confirm a response&lt;/h3&gt;

&lt;p&gt;It applies to the situation that I already knew the answer, but some wordings or terms would confuse people. Usually, &lt;a href=&#34;https://en.wikipedia.org/wiki/Closed-ended_question&#34;&gt;closed questions&lt;/a&gt; are preferable in this case.&lt;/p&gt;

&lt;p&gt;The background:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Current situation: App has a feature toggle which is disabling the new feature. Now we plan to release the new feature to customers. Bob, PO and I are discussing feature toggle OFF.&lt;/li&gt;
&lt;li&gt;Unclear thing for people: Bob might think that turning feature toggle OFF means still disabling the new feature.&lt;/li&gt;
&lt;li&gt;Purpose of the question: Everyone needs to be clear that customers will have new feature enabled&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The target:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Correct person: Bob and PO&lt;/li&gt;
&lt;li&gt;Unnecessary person: None&lt;/li&gt;
&lt;li&gt;Available person: Bob and PO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it comes to my question at the end of discussion: &lt;em&gt;&amp;ldquo;As we discussed, we are going to remove the feature toggle now and release the new feature. Does it means that our customers will see this new feature in the next release?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;i-ask-questions-to-make-a-suggestion&#34;&gt;I ask questions to make a suggestion&lt;/h3&gt;

&lt;p&gt;It applies to the situation that I probably know the correct answer, but others may or may not think about it yet. As it&amp;rsquo;s a suggestion and I&amp;rsquo;m not the person who will proceed working on it, I will pay attention to leave it as open as possible for the further discussion.&lt;/p&gt;

&lt;p&gt;The background:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Current situation: Bob, Designer, PO and I are planning to have new designs of component A and component B in this release. Due to the schedule, they are not possible to be completed together in the same release.&lt;/li&gt;
&lt;li&gt;Unclear thing for others: Component B is dependent on component A, but A is independent on B.&lt;/li&gt;
&lt;li&gt;Purpose of the question: It provides a solution&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The target:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Correct person: Bob, Stuart, Designer and PO&lt;/li&gt;
&lt;li&gt;Unnecessary person: None&lt;/li&gt;
&lt;li&gt;Available person: Bob, Stuart, Designer and PO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it comes to my question during the discussion: &lt;em&gt;&amp;ldquo;As we all know, it&amp;rsquo;s impossible to finish new designs of both component A and component B. Since the new design of B depends on A, how about we focus on finishing component A in this release first and then start to work on B in the next release?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;i-ask-questions-to-probe-the-thinking&#34;&gt;I ask questions to probe the thinking&lt;/h3&gt;

&lt;p&gt;It applies to the situation that no one has an idea for what is happening. And the root cause is unknown. Usually, &lt;a href=&#34;https://en.wikipedia.org/wiki/5_Whys&#34;&gt;5-whys&lt;/a&gt; is useful to determine the root cause.&lt;/p&gt;

&lt;p&gt;The background:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Current situation: Recently many customers send us reports and logs because they cannot log in the app anymore. After an investigation, Bob and Stuart cannot find any useful information to go further.&lt;/li&gt;
&lt;li&gt;Unclear thing for people: The root cause of users cannot log in is unknown.&lt;/li&gt;
&lt;li&gt;Purpose of the question: It probes thinking.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The target:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Correct person: Bob and Stuart&lt;/li&gt;
&lt;li&gt;Unnecessary person: None&lt;/li&gt;
&lt;li&gt;Available person: Bob and Stuart&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So it comes to my question to start the discussion: &lt;em&gt;&amp;ldquo;After we read all users&amp;rsquo; reports and logs, what is the common thing they all have? Same language, same location, same OS, same device or&amp;hellip;&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then, we take a careful look at all reports and logs. We find that all customers have the devices from the same manufacturer and they have the same OS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;ldquo;Why the issue happens only on the devices from this manufacturer, with this specific OS?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Then, we search for the news of changes in the new OS provided by this manufacturer. We find that this manufacturer made some changes on handling log-in events. Apparently, some other apps have the similar log-in issue on those devices.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;ldquo;Since the OS changes impact on our app and other apps, what&amp;rsquo;s the common thing in our app and in other impacted apps have?&amp;rdquo;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;Each question brings us to a deeper investigation until we finally see the root cause.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;The ultimate goal of asking questions is to eliminate ambiguities. Every question has to serve its purpose: &lt;strong&gt;to collect information&lt;/strong&gt;, &lt;strong&gt;to confirm a response&lt;/strong&gt;, &lt;strong&gt;to make a suggestion&lt;/strong&gt; and &lt;strong&gt;to probe the thinking&lt;/strong&gt;. Understanding which purpose your question is serving will help you to ask better questions.&lt;/p&gt;

&lt;p&gt;Do you have any questions?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.imgur.com/F1T5fmx.gif&#34; alt=&#34;question&#34; /&gt;&lt;/p&gt;

&lt;!--
# Thoughts
m y o
x - -
x x -
x - x
x x x
- x -
- - x
- x x
- - -

m: me
y: you
o: others
x: got answer
-: no answer

k me - to make a suggestion
k me, you, others - don&#39;t waste time to ask questions
k me, you or others - to confirm a response
nk you/others, you and others - to collect information
nk null - to initialize a discussion

ideas for further:
care of wording
given when then: simplify actions
ask why to what no who
multiple questions in a roll
Listening is the key
--&gt;
</description>
    </item>
    
    <item>
      <title>I&#39;m A Tester &amp; I&#39;m A Rubber Duck</title>
      <link>https://krazycavin.github.io/2017/06/20/i-am-a-rubber-duck/</link>
      <pubDate>Tue, 20 Jun 2017 21:28:30 CEST</pubDate>
      
      <guid>https://krazycavin.github.io/2017/06/20/i-am-a-rubber-duck/</guid>
      <description>

&lt;p class=&#34;hidden&#34;&gt;
    &lt;img src=&#34;https://cdn-images-1.medium.com/max/1000/1*EbZDvsozz270lIhuAibaCg.jpeg&#34; alt=&#34;coverimage&#34;/&gt;
    
    &lt;sup&gt;
        &lt;em&gt;
            from &lt;a href=&#34;https://www.flickr.com/photos/silvia-m/34764790472/in/photolist-UY3D2b-9zw2em-hSV-8XAvVA&#34;&gt;Silvia Maggi&lt;/a&gt;
        &lt;/em&gt;
    &lt;/sup&gt;
    
&lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;I&amp;rsquo;ll be there for you, like I&amp;rsquo;ve been there before; I&amp;rsquo;ll be there for you, &amp;lsquo;Cause you&amp;rsquo;re there for me too.&amp;rdquo; &lt;sup&gt;&lt;a name=&#34;back1&#34;&gt;&lt;a href=&#34;#link1&#34;&gt;[1]&lt;/a&gt;&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m a tester. When a developer talks to me, I see myself as a &lt;a href=&#34;https://en.wikipedia.org/wiki/Rubber_duck_debugging&#34;&gt;rubber duck&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A rubber duck? Why not Winnie-the-Pooh, Pikachu or Minion? Because the color doesn&amp;rsquo;t matter 😉 But other things do matter.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m a tester, a rubber duck, you are a developer.&lt;/p&gt;

&lt;h3 id=&#34;be-close-to-you&#34;&gt;Be close to you&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m a rubber duck, not an occasional bath toy. I will be bored to float in the water with soap bubbles, meanwhile showing my duck face to who is singing in the tub.&lt;/p&gt;

&lt;p&gt;I choose to stay close to you. You can easily reach me whenever you need me, no matter when you are happy, excited, bored, confused, dispirited&amp;hellip; And I&amp;rsquo;m always prepared for any talks. I keep calm and be ready to support you to solve any problems.&lt;/p&gt;

&lt;h3 id=&#34;listen-to-you&#34;&gt;Listen to you&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m a rubber duck, not a noisy quak-quak. I&amp;rsquo;m patient to listen before I talk. I&amp;rsquo;ll stay silent and become a decent listener, like the initial method of &lt;em&gt;&amp;ldquo;rubber duck problem solving&amp;rdquo;&lt;/em&gt; &lt;sup&gt;&lt;a name=&#34;back2&#34;&gt;&lt;a href=&#34;#link2&#34;&gt;[2]&lt;/a&gt;&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;For me as a tester, I feel good to understand the context and background of the solution.&lt;/p&gt;

&lt;p&gt;For you as a developer, you feel good to speak out loudly what you are now debugging, how you plan to resolve the problem, why thing didn&amp;rsquo;t work at the first place&amp;hellip; All I want to do is listening to you and waiting for your Aha! moment. I like this magic moment, which comes suddenly during talking.&lt;/p&gt;

&lt;h3 id=&#34;probe-your-thinking&#34;&gt;Probe your thinking&lt;/h3&gt;

&lt;p&gt;I&amp;rsquo;m a rubber duck, not a piece of rubber-like plastic. I&amp;rsquo;m better than a rubber duck cause I&amp;rsquo;m able to ask questions.&lt;/p&gt;

&lt;p&gt;I learned to be good at questioning. But I never question your qualification. Because I know that a good developer is a problem-solving genius. And I believe &lt;em&gt;&amp;ldquo;a junior developer is code focused; a senior developer provides solutions to problems&amp;rdquo;&lt;/em&gt; &lt;sup&gt;&lt;a name=&#34;back3&#34;&gt;&lt;a href=&#34;#link3&#34;&gt;[3]&lt;/a&gt;&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Sometimes when you are facing pretty complicated problems, you wracked your brain but all the ideas are towards to the dead end. I&amp;rsquo;ll ask you questions &lt;strong&gt;to encourage further thought&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Sometimes when you are facing really easy problems, they can immediately offer solutions 1, 2 and 3&amp;hellip; without a second thought. I&amp;rsquo;ll ask you questions &lt;strong&gt;to clarify the real problem&lt;/strong&gt; and &lt;strong&gt;to guide you to a proper solution&lt;/strong&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I&amp;rsquo;m a tester &amp;amp; a rubber duck, you are a developer.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m staying with you, you can use me as your reliable coding buddy.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m listening to you, you can show me your professional skill.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m encouraging you to think, you can tell me your awesome thought.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m there for you, you get my full support. 👊&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;link1&#34;&gt;&lt;a href=&#34;#back1&#34;&gt;[1]&lt;/a&gt;&lt;/a&gt; The Rembrandts: &lt;a href=&#34;https://www.youtube.com/watch?v=q-9kPks0IfE&#34;&gt;I&amp;rsquo;ll be there for you&lt;/a&gt;
&lt;br/&gt;
&lt;a name=&#34;link2&#34;&gt;&lt;a href=&#34;#back2&#34;&gt;[2]&lt;/a&gt;&lt;/a&gt; Jeff Atwood: &lt;a href=&#34;https://blog.codinghorror.com/rubber-duck-problem-solving/&#34;&gt;Rubber Duck Problem Solving&lt;/a&gt;
&lt;br/&gt;
&lt;a name=&#34;link3&#34;&gt;&lt;a href=&#34;#back3&#34;&gt;[3]&lt;/a&gt;&lt;/a&gt; Matt Briggs: &lt;a href=&#34;http://mattbriggs.net/blog/2015/06/01/the-role-of-a-senior-developer/&#34;&gt;The Role of a Senior Developer&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
